name: cd

on:
  push:
    branches: [main]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env: 
      CR_REGISTRY_ID: crpjsddam5er024ghlve
      CR_REPOSITORY: notely-ar-repo
      IMAGE_NAME: notely
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

    steps: 
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.0"

      - name: Install goose
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Run buildprod script
        run: ./scripts/buildprod.sh

      - name: Login to yandex Container Registry
        uses: yc-actions/yc-cr-login@v3
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

      - name: Build,tag, and push Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -t cr.yandex/$CR_REGISTRY_ID/$CR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG .
          docker push cr.yandex/$CR_REGISTRY_ID/$CR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG

      - name: Run migration
        run: ./scripts/migrateup.sh

      - name: Deploy to Serverless Containers
        uses: yc-actions/yc-sls-container-deploy@v4
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          container-name: notely
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-service-account-id: ${{ secrets.YC_SERVICE_ACCOUNT_ID }}
          revision-cores: 1
          revision-memory: 128MB
          revision-core-fraction: 100
          revision-concurrency: 1
          revision-image-url: cr.yandex/${{ env.CR_REGISTRY_ID }}/${{ env.CR_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          revision-execution-timeout: 60  # В секундах
          revision-secrets: DATABASE_URL=e6q2vn6vdh7e658m05k8/latest/DATABASE_URL